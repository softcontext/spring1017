<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.example.demo.pointcut1.aopns3"/>

	<!-- aop:config 안에 설정은 빈 컨테이너 등록 객체들 모두에게 적용 됩니다. -->
	<aop:config>
		<aop:pointcut expression="execution(* two(..))" id="pointcut"/>
		
		<aop:advisor advice-ref="myBeforeAdvice" pointcut-ref="pointcut"/>
		<aop:advisor advice-ref="myAroundAdvice" pointcut-ref="pointcut"/>
		
		<!-- 
			인터페이스를 구현한 클래스를 어드바이스로 사용하는 경우에는 advisor 태그를 사용하고
			그렇지 않은 클래스를 어드바이스로 사용하는 경우에는 aspect 태그를 사용합니다.
		 -->
		<aop:aspect ref="myAspect">
			<!-- 
				빈 아이디 myAspect가 가리키는 객체에 다수의 메소드가 존재합니다.
				스프링은 어느 메소드가 어드바이스 용 메소드인지 모릅니다.
				더불어서 어느 시점에 메소드를 기동시켜야 하는지도 모릅니다.
				따라서, 추가적으로 다음 태그들을 사용하여야 합니다.
				
				aop:before =같은의미= implements MethodBeforeAdvice
				aop:around =같은의미= implements MethodInterceptor
			 -->
			<aop:before method="myBefore" pointcut="execution(* add(..))"/>
			<aop:around method="myAround" pointcut-ref="pointcut"/>
			<aop:after-returning method="myAfterReturning" pointcut="execution(* divide(..))" returning="result"/>
			<aop:after-throwing method="myAfterThrowing" pointcut="execution(* divide(..))" throwing="error"/>
			<aop:after method="myAfter" pointcut-ref="pointcut"/>
		</aop:aspect>
		
	</aop:config>

</beans>






